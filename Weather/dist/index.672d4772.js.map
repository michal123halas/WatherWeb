{"mappings":"AAAA,MAAM,YAAY,SAAS,cAAc;AACzC,MAAM,eAAe,SAAS,cAAc;AAC5C,MAAM,kBAAkB,SAAS,cAAc;AAC/C,MAAM,oBAAoB,SAAS,cAAc;AACjD,MAAM,UAAU;AAChB,MAAM,oBAAoB,CAAC,UAAU,aAAa;IAC9C,IAAI,UAAU,GACZ,OAAO,CAAC;gBACE,EAAE,SAAS,EAAE,EAAE,YAAY,OAAO,MAAM,IAAI,CAAC,EAAE,CAAC;8BAClC,EAAE,AAAC,CAAA,YAAY,KAAK,OAAO,MAAK,EAAG,QAAQ,GAAG;sBACtD,EAAE,YAAY,KAAK,MAAM;0BACrB,EAAE,YAAY,KAAK,SAAS;;;wDAGE,EAAE,YAAY,OAAO,CAAC,EAAE,CAAC,KAAK;oBAClE,EAAE,YAAY,OAAO,CAAC,EAAE,CAAC,YAAY;cAC3C,CAAC;SAGP,OAAM,CAAC;yBACU,EAAE,YAAY,OAAO,MAAM,GAAG,CAAC,EAAE,CAAC;gEACK,EAAE,YAAY,OAAO,CAAC,EAAE,CAAC,KAAK;8BAChE,EAAE,AAAC,CAAA,YAAY,KAAK,OAAO,MAAK,EAAG,QAAQ,GAAG;8BAC9C,EAAE,YAAY,KAAK,MAAM;kCACrB,EAAE,YAAY,KAAK,SAAS;qBACzC,CAAC;AAGtB;AACA,MAAM,oBAAoB,CAAC,UAAU,KAAK;IACtC,MAAM,kBAAkB,CAAC,qDAAqD,EAAE,IAAI,KAAK,EAAE,IAAI,OAAO,EAAE,QAAQ,CAAC;IACjH,MAAM,iBAAiB,KAAK,CAAA,MAAO,IAAI,QAAQ,KAAK,CAAA;QAChD,MAAM,qBAAqB,EAAE;QAC7B,qBAAqB;QACrB,MAAM,kBAAkB,KAAK,KAAK,OAAO,CAAA;YACrC,MAAM,eAAe,IAAI,KAAK,SAAS,QAAQ;YAC/C,IAAI,CAAC,mBAAmB,SAAS,eAC9B,OAAQ,mBAAmB,KAAK;QAEvC;QAEA,gBAAgB,YAAY;QAC5B,kBAAkB,YAAY;QAC9B,UAAU,QAAQ;QAElB,QAAQ,IAAI;QACZ,gBAAgB,QAAQ,CAAC,aAAa;YAClC,IAAG,UAAU,GACT,kBAAkB,mBAAmB,aAAc,kBAAkB,UAAU,aAAa;iBAE5F,gBAAgB,mBAAmB,aAAc,kBAAkB,UAAU,aAAa;QAIlG;IAEJ,GAAG,MAAM;QACL,MAAM;IACV;AACJ;AACA,MAAM,qBAAqB;IACvB,MAAM,WAAW,UAAU,MAAM;IACjC,IAAG,CAAC,UAAU;IACd,MAAM,oBAAoB,CAAC,+CAA+C,EAAE,SAAS,eAAe,EAAE,QAAQ,CAAC;IAC/G,MAAM,mBAAmB,KAAK,CAAA,MAAO,IAAI,QAAQ,KAAK,CAAA;QAClD,IAAI,CAAC,KAAK,QAAQ,OAAO,MAAM,CAAC,yBAAyB,EAAE,SAAS,CAAC;QACrE,MAAM,EAAC,IAAI,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,IAAI,CAAC,EAAE;QAC9B,kBAAkB,MAAK,KAAI;IAC3B,oBAAoB;IACxB,GAAG,MAAM;QACL,MAAM;IACV;AACJ;AACA,aAAa,iBAAiB,SAAS","sources":["script.js"],"sourcesContent":["const cityInput = document.querySelector(\".city-Input\");\nconst searchButton = document.querySelector(\".search-btn\");\nconst weatherCardsDiv = document.querySelector(\".weather-cards\");\nconst currentWeatherDiv = document.querySelector(\".current-weather\");\nconst API_key = \"28a38560bfa41e1430a5ade4055e37b7\";\nconst createWeatherCard = (cityName, weatherItem, index) => {\n    if (index === 0 ){\n      return ` <div class=\"details\">\n            <h2>${cityName} (${weatherItem.dt_txt.split(\" \")[0]})</h2>\n            <h4>Temperature:  ${(weatherItem.main.temp - 273.15).toFixed(2)}°C</h4>\n            <h4>Wind: ${weatherItem.wind.speed} M/S</h4>\n            <h4>Humidity: ${weatherItem.main.humidity}%</h4>\n        </div>\n        <div class=\"icon\">\n            <img src=\"https://openweathermap.org/img/wn/${weatherItem.weather[0].icon}@4x.png\" alt=\"weather-icon\">\n                <h4>${weatherItem.weather[0].description}</h4>\n        </div>`;\n\n    }else {\n        return` <li class=\"card\">\n                    <h3>(${weatherItem.dt_txt.split(\"\")[0]})</h3>\n                    <img src=\"https://openweathermap.org/img/wn/${weatherItem.weather[0].icon}@2x.png\" alt=\"weather-icon\">\n                    <h4>Temp: ${(weatherItem.main.temp - 273.15).toFixed(2)}°C</h4>\n                    <h4>Wind: ${weatherItem.wind.speed} M/S</h4>\n                    <h4>Humidity: ${weatherItem.main.humidity}%</h4>\n                </li>`;\n    }\n\n};\nconst getWeatherDetails = (cityName, lat, lon) => {\n    const WEATHER_API_URL = `http://api.openweathermap.org/data/2.5/forecast/?lat=${lat}&lon=${lon}&appid=${API_key}`;\n    fetch(WEATHER_API_URL).then(res => res.json()).then(data => {\n        const uniqueForecastDays = [];\n        // console.log(data);\n        const fiveDayForecast = data.list.filter(forecast => {\n            const forecastData = new Date(forecast.dt_txt).getDate();\n            if (!uniqueForecastDays.includes(forecastData)){\n               return  uniqueForecastDays.push(forecastData);\n            }\n        });\n\n        weatherCardsDiv.innerHTML = \"\";\n        currentWeatherDiv.innerHTML = \"\";\n        cityInput.value = \"\";\n\n        console.log(fiveDayForecast);\n        fiveDayForecast.forEach((weatherItem, index) => {\n            if(index === 0){\n                currentWeatherDiv.insertAdjacentHTML(\"beforeend\" , createWeatherCard(cityName, weatherItem, index));\n            } else {\n                weatherCardsDiv.insertAdjacentHTML(\"beforeend\" , createWeatherCard(cityName, weatherItem, index));\n            }\n\n\n        });\n\n    }).catch(() => {\n        alert(\"An error occurred while fetching weather forecast!\")\n    })\n}\nconst getCityCoordinates = () =>{\n    const cityName = cityInput.value.trim();\n    if(!cityName) return;\n    const GEOCODING_API_URL = `http://api.openweathermap.org/geo/1.0/direct?q=${cityName}&limit=1&appid=${API_key}`\n    fetch(GEOCODING_API_URL).then(res => res.json()).then(data => {\n        if (!data.length) return alert(`No coordinates found for ${cityName}`);\n        const {name,lat,lon} = data[0];\n        getWeatherDetails(name,lat,lon);\n        // console.log(data)\n    }).catch(() => {\n        alert(\"An error occurred while fetching the coordinates\")\n    })\n}\nsearchButton.addEventListener(\"click\", getCityCoordinates);"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}